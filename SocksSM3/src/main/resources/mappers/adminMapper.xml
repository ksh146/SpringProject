<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.mappers.adminMapper">

	<!-- 카테고리 호출 -->
 	<select id="category" resultType="kr.co.domain.CategoryVO">
		SELECT level, cateName, cateCode, cateCodeRef 
		FROM socks_category
		start with cateCodeRef is null connect by prior cateCode = cateCodeRef
	</select>
	
	<!-- 상품 등록 -->
	<insert id="register">
		INSERT INTO s_socks (socksNum, socksName, cateCode, socksPrice, socksStock, socksDes, socksImg, socksThumbImg)
		VALUES (s_socks_seq.nextval, #{socksName}, #{cateCode}, #{socksPrice}, #{socksStock}, #{socksDes}, #{socksImg}, #{socksThumbImg})
	</insert>
	
	<!-- 상품 목록 -->	
	<!-- <select id="sockslist" resultType="kr.co.domain.SocksVO">
		SELECT socksNum, socksName, cateCode, socksPrice, socksStock, socksDes, socksImg, socksDate
		FROM s_socks ORDER BY socksNum DESC
	</select> -->
	
	<select id="sockslist" resultType="kr.co.domain.SocksViewVO">
		SELECT s.socksNum, s.socksName, s.cateCode, c.cateCodeRef, c.cateName,
		socksPrice, socksStock, socksDes, socksImg, socksDate,
		s.socksImg, s.socksThumbImg
		FROM s_socks s inner join socks_category c on s.cateCode = c.cateCode
	</select>
	
	<!-- 상품 조회(카테고리) -->
	<!-- <select id="socksView" resultType="kr.co.domain.SocksVO">
		SELECT socksNum, socksName, cateCode, socksPrice, socksStock, socksDes, socksImg, socksDate
		FROM s_socks WHERE socksNum = #{socksNum}
	</select> -->
	
	<!-- 상품 수정 -->
	<update id="socksUpdate">
		UPDATE s_socks SET socksName = #{socksName}, cateCode = #{cateCode}, socksPrice = #{socksPrice}, socksStock = #{socksStock}, socksDes = #{socksDes}, 
		socksImg = #{socksImg}, socksThumbImg = #{socksThumbImg}
		WHERE socksNum = #{socksNum}
	</update>
	
	<!-- 상품 조회 -->
	<select id="socksView" resultType="kr.co.domain.SocksViewVO">
		SELECT s.socksNum, s.socksName, s.cateCode, c.cateCodeRef, c.cateName,
		socksPrice, socksStock, socksDes, socksImg, socksDate, s.socksImg, s.socksThumbImg
		FROM s_socks s inner join socks_category c on s.cateCode = c.cateCode
		WHERE s.socksNum = #{socksNum}
	</select>
	
	<!-- 상품 삭제 -->
	<delete id="socksDelete">
		DELETE s_socks WHERE socksNum = #{socksNum}
	</delete>
	
	<!-- 주문 목록 -->
	<select id="orderList" resultType="kr.co.domain.OrderVO">
		SELECT orderId, userId, orderRec, userAdd1, userAdd2, userAdd3, orderPhone, amount, orderDate, delivery
		FROM s_order
	</select>

	<!-- 주문 목록(상세) -->
	<select id="orderView" resultType="kr.co.domain.OrderListVO">
		SELECT o.orderId, o.userId, o.orderRec, o.userAdd1, o.userAdd2, o.userAdd3, o.orderPhone, o.amount, o.orderDate, o.delivery,
		d.orderDetailsNum, d.socksNum, d.cartStock, s.socksName, s.socksThumbImg, s.socksPrice
		FROM s_order o INNER JOIN s_order_details d ON o.orderId = d.orderId
		INNER JOIN s_socks s on d.socksNum = s.socksNum
		WHERE o.orderId = #{orderId}
	</select>
	
	<!-- 배송 상황 -->
	<update id="delivery">
		UPDATE s_order SET delivery = #{delivery} WHERE orderId = #{orderId}
	</update>
	
	<!-- 상품 수량 변경 -->
	<update id="changeStock">
		UPDATE s_socks SET socksStock = socksStock - #{socksStock}
		WHERE socksNum = #{socksNum}
	</update>
	
	<!-- 상품 수량 조절 보조 -->
	<select id="ChangeStock_sub" resultType="kr.co.domain.OrderDetailVO">
		SELECT orderId, socksNum, cartStock FROM s_order_details
		WHERE orderId = #{orderId}
	</select>
	
	<!-- 모든 댓글 -->
	<select id="allReply" resultType="kr.co.domain.ReplyListVO">
		SELECT r.socksNum, r.userId, r.replyNum, r.replyCon, r.replyDate, m.userName
		FROM s_reply r INNER JOIN s_member m ON r.userId = m.userId
	</select>
	
	<!-- 댓글 삭제 -->
	<delete id="deleteReply">
		DELETE s_reply WHERE replyNum = #{replyNum}
	</delete>
</mapper>
